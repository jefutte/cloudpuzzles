{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adPDCVMName": {
			"type": "string",
			"metadata": {
				"description": "The computer name of the PDC"
			},
			"defaultValue": "adPDC"
		},
		"adBDCVMName": {
			"type": "string",
			"metadata": {
				"description": "The computer name of the BDC"
			},
			"defaultValue": "adBDC"
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "The name of the Administrator of the new VM and Domain"
			},
			"defaultValue": "adAdministrator"
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password for the Administrator account of the new VM and Domain"
			}
		},
		"adVMSize": {
			"type": "string",
			"allowedValues": [
				"Standard_D1",
				"Standard_DS1",
				"Standard_D2",
				"Standard_DS2",
				"Standard_D3",
				"Standard_DS3",
				"Standard_D4",
				"Standard_DS4",
				"Standard_D11",
				"Standard_DS11",
				"Standard_D12",
				"Standard_DS12",
				"Standard_D13",
				"Standard_DS13",
				"Standard_D14",
				"Standard_DS14"
			],
			"metadata": {
				"description": "The size of the VM Created"
			},
			"defaultValue": "Standard_D2"
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer",
			"metadata": {
				"description": "Image Publisher"
			}
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "WindowsServer",
			"metadata": {
				"description": "Image Offer"
			}
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "2012-R2-Datacenter",
			"metadata": {
				"description": "Image SKU"
			}
		},
		"adAvailabilitySetName": {
			"type": "string",
			"metadata": {
				"description": "The name of the availability set that the AD VM is created in"
			},
			"defaultValue": "adAvailabiltySet"
		},
		"domainName": {
			"type": "string",
			"metadata": {
				"description": "The FQDN of the AD Domain created "
			},
			"defaultValue": "adarmtest.com"
		},
		"dnsPrefix": {
			"type": "string",
			"metadata": {
				"description": "The DNS prefix for the public IP address used by the Load Balancer"
			}
		},
		"pdcRDPPort": {
			"type": "int",
			"metadata": {
				"description": "The public RDP port for the PDC VM"
			},
			"defaultValue": 3389
		},
		"bdcRDPPort": {
			"type": "int",
			"metadata": {
				"description": "The public RDP port for the BDC VM"
			},
			"defaultValue": 13389
		},
		"AssetLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources such as templates and DSC modules that the script is dependent"
			},
			"defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/active-directory-new-domain-ha-2-dc"
		}
	},
	"variables": {
		"PDCNicName": "DC01-NIC", 
		"PDCNicIP": "192.168.20.4",
		"BDCNicName": "DC02-NIC",
		"BDCNicIP": "192.168.20.4",
		"adLBFE": "LBFE",
		"adLBBE": "LBBE",
		"adPDCRDPNAT": "adPDCRDP",
		"adBDCRDPNAT": "adBDCRDP",
		"VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		"adSubnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('adSubnetName'))]",
		"adPDCNicId": "[resourceId('Microsoft.Network/networkInterfaces',parameters('PDCNicName'))]",
		"adPDCIPConfigID": "[concat(variables('adPDCNicId'),'/ipConfigurations/ipconfig1')]",
		"adBDCNicId": "[resourceId('Microsoft.Network/networkInterfaces',parameters('BDCNicName'))]",
		"adBDCIPConfigID": "[concat(variables('adBDCNicId'),'/ipConfigurations/ipconfig1')]",
		"adLBName": "adLoadBalancer",
		"adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
		"adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('adLBFE'))]",
		"adPDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adPDCRDPNAT'))]",
		"adBDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adBDCRDPNAT'))]",
		"adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('adLBBE'))]",
		"adPDCDataDisk": "ADPDCDataDisk",
		"adBDCDataDisk": "ADBDCDataDisk",
		"adDataDiskSize": 1000,
		"vnetTemplateUri": "[concat(parameters('AssetLocation'),'/vnet.json')]",
		"nicTemplateUri": "[concat(parameters('AssetLocation'),'/nic.json')]",
		"vnetwithDNSTemplateUri": "[concat(parameters('AssetLocation'),'/vnet-with-dns-server.json')]",
		"adPDCModulesURL": "[concat(parameters('AssetLocation'),'/CreateADPDC.ps1.zip')]",
		"adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
		"adBDCModulesURL": "[concat(parameters('AssetLocation'),'/CreateADBDC.ps1.zip')]",
		"adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsPrefix')]"
				}
			}
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[parameters('adAvailabilitySetName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]"
		},
		{
			"name": "VNet",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('adSubnet')]"
					}
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[variables('adLBName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('adLBFE')]",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('adLBBE')]"
					}
				],
				"inboundNatRules": [
					{
						"name": "[variables('adPDCRDPNAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('adlbFEConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": "[parameters('pdcRDPPort')]",
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					},
					{
						"name": "[variables('adBDCRDPNAT')]",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('adlbFEConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": "[parameters('bdcRDPPort')]",
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					}
				]
			}
		},
		{
			"name": "[parameters('PDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"dependsOn": [
				"Microsoft.Resources/deployments/VNet",
				"[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
			],
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[parameters('PDCNicIP')]",
							"subnet": {
								"id": "[variables('adSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('adBEAddressPoolID')]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('adPDCRDPNATRuleID')]"
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "[parameters('BDCNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[parameters('location')]",
			"dependsOn": [
				"Microsoft.Resources/deployments/VNet",
				"[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
			],
			"apiVersion": "2015-05-01-preview",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress": "[parameters('BDCNicIP')]",
							"subnet": {
								"id": "[variables('adSubnetRef')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('adBEAddressPoolID')]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[variables('adBDCRDPNATRuleID')]"
								}
							]
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('adPDCVMName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',parameters('PDCNicName'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]",
				"[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]"
				},
				"osProfile": {
					"computername": "[parameters('adPDCVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/','osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/', variables('adPDCDataDisk'),'-1.vhd')]"
							},
							"name": "[concat(parameters('adPDCVMName'),'-data-disk1')]",
							"caching": "None",
							"diskSizeGB": "[variables('adDataDiskSize')]",
							"lun": 0,
							"createOption": "empty"
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('PDCNicName'))]"
						}
					]
				}
			},
			"resources": [
				{
					"type": "Microsoft.Compute/virtualMachines/extensions",
					"name": "[concat(parameters('adPDCVMName'),'/CreateADForest')]",
					"apiVersion": "2015-05-01-preview",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Compute/virtualMachines', parameters('adPDCVMName'))]"
					],
					"properties": {
						"publisher": "Microsoft.Powershell",
						"type": "DSC",
						"typeHandlerVersion": "1.7",
						"settings": {
							"ModulesUrl": "[variables('adPDCModulesURL')]",
							"ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
							"Properties": {
								"DomainName": "[parameters('domainName')]",
								"AdminCreds": {
									"UserName": "[parameters('adminUserName')]",
									"Password": "PrivateSettingsRef:AdminPassword"
								}
							}
						},
						"protectedSettings": {
							"Items": {
								"AdminPassword": "[parameters('adminPassword')]"
							}
						}
					}
				}
			]
		},
		{
			"name": "UpdateVNetDNS1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', parameters('adPDCVMName'),'/extensions/CreateADForest')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetwithDNSTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('adSubnet')]"
					},
					"DNSServerAddress": {
						"value": [
							"[parameters('PDCNicIP')]"
						]
					}
				}
			}
		},
		{
			"name": "UpdateBDCNIC",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"Microsoft.Resources/deployments/UpdateVNetDNS1"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('nicTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"nicName": {
						"value": "[parameters('BDCNicName')]"
					},
					"ipConfigurations": {
						"value": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Static",
									"privateIPAddress": "[parameters('BDCNicIP')]",
									"subnet": {
										"id": "[variables('adSubnetRef')]"
									},
									"loadBalancerBackendAddressPools": [
										{
											"id": "[variables('adBEAddressPoolID')]"
										}
									],
									"loadBalancerInboundNatRules": [
										{
											"id": "[variables('adBDCRDPNATRuleID')]"
										}
									]
								}
							}
						]
					},
					"dnsServers": {
						"value": [
								"[parameters('PDCNicIP')]"
							]
					}

				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('adBDCVMName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
				"[resourceId('Microsoft.Network/networkInterfaces',parameters('BDCNicName'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]",
				"[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('adVMSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]"
				},
				"osProfile": {
					"computername": "[parameters('adBDCVMName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/','osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/', variables('adBDCDataDisk'),'-1.vhd')]"
							},
							"name": "[concat(parameters('adBDCVMName'),'-data-disk1')]",
							"caching": "None",
							"diskSizeGB": "[variables('adDataDiskSize')]",
							"lun": 0,
							"createOption": "empty"
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('BDCNicName'))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('adBDCVMName'),'/CreateBDC')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', parameters('adBDCVMName'))]",
				"Microsoft.Resources/deployments/UpdateBDCNIC"
			],
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "1.7",
				"settings": {
					"ModulesUrl": "[variables('adBDCModulesURL')]",
					"ConfigurationFunction": "[variables('adBDCConfigurationFunction')]",
					"Properties": {
						"DomainName": "[parameters('domainName')]",
						"AdminCreds": {
							"UserName": "[parameters('adminUserName')]",
							"Password": "PrivateSettingsRef:AdminPassword"
						}
					}
				},
				"protectedSettings": {
					"Items": {
						"AdminPassword": "[parameters('adminPassword')]"
					}
				}
			}
		},
		{
			"name": "UpdateVNetDNS2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/',parameters('adBDCVMName'),'/extensions/CreateBDC')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vnetwithDNSTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"location": {
						"value": "[parameters('location')]"
					},
					"virtualNetworkName": {
						"value": "[parameters('virtualNetworkName')]"
					},
					"virtualNetworkAddressRange": {
						"value": "[parameters('virtualNetworkAddressRange')]"
					},
					"subnetName": {
						"value": "[parameters('adSubnetName')]"
					},
					"subnetRange": {
						"value": "[parameters('adSubnet')]"
					},
					"DNSServerAddress": {
						"value": [
							"[parameters('adPDCNicIPAddress')]",
							"[parameters('adBDCNicIPAddress')]"
						]
					}
				}
			}
		}
	]
}
